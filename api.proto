// Copyright 2015 ThoughtWorks, Inc.

// This file is part of gauge-proto.

// gauge-proto is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// gauge-proto is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with gauge-proto.  If not, see <http://www.gnu.org/licenses/>.

package gauge.messages;
// Defines communication messages for API
// Every API call will have a Request & Response pair
import "spec.proto";

message GetProjectRootRequest {
}

message GetProjectRootResponse {
    required string projectRoot = 1;
}

message GetInstallationRootRequest {
}

message GetInstallationRootResponse {
    required string installationRoot = 1;
}

message GetAllStepsRequest {
}

message GetAllStepsResponse {
    repeated gauge.messages.ProtoStepValue allSteps = 1;
}

message GetAllSpecsRequest {
}

message GetAllSpecsResponse {
    repeated gauge.messages.ProtoSpec specs = 1;
}

message GetAllConceptsRequest {
}

message GetAllConceptsResponse {
    repeated ConceptInfo concepts = 1;
}

message ConceptInfo {
    required gauge.messages.ProtoStepValue stepValue = 1;
    required string filepath = 2;
    required int32 lineNumber = 3;
}

message GetStepValueRequest {
    required string stepText = 1;
    optional bool hasInlineTable = 2;
}

message GetStepValueResponse {
    required gauge.messages.ProtoStepValue stepValue = 1;
}

message GetLanguagePluginLibPathRequest {
    required string language = 1;
}

message GetLanguagePluginLibPathResponse {
    required string path = 1;
}

message ErrorResponse {
    required string error = 1;
}

message PerformRefactoringRequest {
    required string oldStep = 1;
    required string newStep = 2;
}

message PerformRefactoringResponse {
    required bool success = 1;
    repeated string errors = 2;
    repeated string filesChanged = 3;
}

message APIMessage {
    enum APIMessageType {
        GetProjectRootRequest = 1;
        GetProjectRootResponse = 2;
        GetInstallationRootRequest = 3;
        GetInstallationRootResponse = 4;
        GetAllStepsRequest = 5;
        GetAllStepResponse = 6;
        GetAllSpecsRequest = 7;
        GetAllSpecsResponse = 8;
        GetStepValueRequest = 9;
        GetStepValueResponse = 10;
        GetLanguagePluginLibPathRequest = 11;
        GetLanguagePluginLibPathResponse = 12;
        ErrorResponse = 13;
        GetAllConceptsRequest = 14;
        GetAllConceptsResponse = 15;
        PerformRefactoringRequest = 16;
        PerformRefactoringResponse = 17;
    }

    required APIMessageType messageType = 1;
    required int64 messageId = 2;

    optional GetProjectRootRequest projectRootRequest = 3;
    optional GetProjectRootResponse projectRootResponse = 4;
    optional GetInstallationRootRequest installationRootRequest = 5;
    optional GetInstallationRootResponse installationRootResponse = 6;
    optional GetAllStepsRequest allStepsRequest = 7;
    optional GetAllStepsResponse allStepsResponse = 8;
    optional GetAllSpecsRequest allSpecsRequest = 9;
    optional GetAllSpecsResponse allSpecsResponse = 10;
    optional GetStepValueRequest stepValueRequest = 11;
    optional GetStepValueResponse stepValueResponse = 12;
    optional GetLanguagePluginLibPathRequest libPathRequest = 13;
    optional GetLanguagePluginLibPathResponse libPathResponse = 14;
    optional ErrorResponse error = 15;
    optional GetAllConceptsRequest allConceptsRequest = 16;
    optional GetAllConceptsResponse allConceptsResponse = 17;
    optional PerformRefactoringRequest performRefactoringRequest = 18;
    optional PerformRefactoringResponse performRefactoringResponse = 19;


}